/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SpecialTerm;

import javax.swing.*;
import java.awt.Color;

/**
 *
 * @author Jacob Laurel
 */
public class SalesTerminal extends javax.swing.JFrame {

    /**
     * Creates new form SalesTerminal
     */
    public SalesTerminal() {
        initComponents();
        
        jComboCategory1.addItem("   --- Select Category ---");
        jComboCategory1.addItem("Clothing");
        jComboCategory1.addItem("Accessory");
        
        jComboCategory2.addItem("   --- Select Category ---");
        jComboCategory2.addItem("Clothing");
        jComboCategory2.addItem("Accessory");
        
        jComboCategory3.addItem("   --- Select Category ---");
        jComboCategory3.addItem("Clothing");
        jComboCategory3.addItem("Accessory");

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jComboCategory1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboProduct1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboSize1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboQuantity1 = new javax.swing.JComboBox<>();
        jPrice1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboMoP1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboCategory2 = new javax.swing.JComboBox<>();
        jComboProduct2 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboSize2 = new javax.swing.JComboBox<>();
        jComboQuantity2 = new javax.swing.JComboBox<>();
        jPrice2 = new javax.swing.JTextField();
        jComboMoP2 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jExit = new javax.swing.JButton();
        jEnter = new javax.swing.JButton();
        jNext = new javax.swing.JButton();
        jPrint = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboCategory3 = new javax.swing.JComboBox<>();
        jComboProduct3 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jComboSize3 = new javax.swing.JComboBox<>();
        jComboQuantity3 = new javax.swing.JComboBox<>();
        jComboMoP3 = new javax.swing.JComboBox<>();
        jPrice3 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ABC Clothing and Accessory Store | Sales Terminal");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea.setBackground(new java.awt.Color(237, 242, 244));
        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jTextArea.setForeground(new java.awt.Color(0, 0, 0));
        jTextArea.setRows(5);
        jTextArea.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea);

        jPanel2.setBackground(new java.awt.Color(237, 242, 244));

        jComboCategory1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboCategory1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategory1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Category");

        jComboProduct1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboProduct1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Product");

        jComboSize1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboSize1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSize1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Size");

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Quantity");

        jComboQuantity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboQuantity1ActionPerformed(evt);
            }
        });

        jPrice1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jPrice1.setFocusable(false);

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Price");

        jComboMoP1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Mode of Payment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(171, 171, 171))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboSize1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(36, 36, 36))
                            .addComponent(jComboQuantity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jComboCategory1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jComboMoP1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboCategory1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboSize1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboMoP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(237, 242, 244));
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Category");

        jLabel10.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Product");

        jComboCategory2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboCategory2.setForeground(new java.awt.Color(0, 0, 0));
        jComboCategory2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategory2ActionPerformed(evt);
            }
        });

        jComboProduct2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboProduct2.setForeground(new java.awt.Color(0, 0, 0));
        jComboProduct2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboProduct2ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Size");

        jLabel12.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Quantity");

        jLabel13.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Price");

        jLabel14.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Mode of Payment");

        jComboSize2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jComboQuantity2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboQuantity2.setForeground(new java.awt.Color(0, 0, 0));
        jComboQuantity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboQuantity2ActionPerformed(evt);
            }
        });

        jPrice2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jPrice2.setForeground(new java.awt.Color(0, 0, 0));
        jPrice2.setFocusable(false);

        jComboMoP2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboMoP2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(190, 190, 190)
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboCategory2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jComboSize2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jComboQuantity2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboMoP2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
                            .addComponent(jComboProduct2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboCategory2)
                    .addComponent(jComboProduct2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboSize2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboMoP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jExit.setBackground(new java.awt.Color(43, 45, 66));
        jExit.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jExit.setForeground(new java.awt.Color(255, 255, 255));
        jExit.setText("Exit");
        jExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitActionPerformed(evt);
            }
        });

        jEnter.setBackground(new java.awt.Color(217, 4, 41));
        jEnter.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jEnter.setForeground(new java.awt.Color(255, 255, 255));
        jEnter.setLabel("Enter");
        jEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEnterActionPerformed(evt);
            }
        });

        jNext.setBackground(new java.awt.Color(43, 45, 66));
        jNext.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jNext.setForeground(new java.awt.Color(255, 255, 255));
        jNext.setText("Next Customer");
        jNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNextActionPerformed(evt);
            }
        });

        jPrint.setBackground(new java.awt.Color(43, 45, 66));
        jPrint.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jPrint.setForeground(new java.awt.Color(255, 255, 255));
        jPrint.setText("Print");
        jPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(jEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(237, 242, 244));

        jLabel15.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Category");

        jLabel16.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Product");

        jComboCategory3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboCategory3.setForeground(new java.awt.Color(0, 0, 0));
        jComboCategory3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategory3ActionPerformed(evt);
            }
        });

        jComboProduct3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboProduct3.setForeground(new java.awt.Color(0, 0, 0));
        jComboProduct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboProduct3ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Size");

        jLabel18.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Quantity");

        jLabel19.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Price");

        jLabel20.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Mode of Payment");

        jComboSize3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboSize3.setForeground(new java.awt.Color(0, 0, 0));

        jComboQuantity3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboQuantity3.setForeground(new java.awt.Color(0, 0, 0));
        jComboQuantity3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboQuantity3ActionPerformed(evt);
            }
        });

        jComboMoP3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboMoP3.setForeground(new java.awt.Color(0, 0, 0));

        jPrice3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jPrice3.setForeground(new java.awt.Color(0, 0, 0));
        jPrice3.setFocusable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(188, 188, 188)
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboCategory3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jComboSize3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jComboQuantity3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jPrice3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jComboMoP3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4))
                            .addComponent(jComboProduct3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboCategory3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboProduct3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboSize3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboQuantity3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboMoP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(230, 57, 70));

        jLabel2.setBackground(new java.awt.Color(230, 57, 70));
        jLabel2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ABC Clothing and Accessory Store");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2))
        );

        jPanel7.setBackground(new java.awt.Color(230, 57, 70));

        jLabel1.setBackground(new java.awt.Color(230, 57, 70));
        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sales Terminal");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(391, 391, 391))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(237, 237, 237))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitActionPerformed
        System.exit(0);
        
    }//GEN-LAST:event_jExitActionPerformed

    private void jNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNextActionPerformed
       jTextArea.setText(""); 
       jComboCategory1.setSelectedIndex(0);
       jComboProduct1.setSelectedIndex(0);
       jComboSize1.setSelectedIndex(0);
       jComboQuantity1.setSelectedIndex(0);
       jPrice1.setText("");
       jComboCategory2.setSelectedIndex(0);
       jComboProduct2.setSelectedIndex(0);
       jComboSize2.setSelectedIndex(0);
       jComboQuantity2.setSelectedIndex(0);
       jPrice2.setText("");
       jComboCategory3.setSelectedIndex(0);
       jComboProduct3.setSelectedIndex(0);
       jComboSize3.setSelectedIndex(0);
       jComboQuantity3.setSelectedIndex(0);
       jPrice3.setText("");
    }//GEN-LAST:event_jNextActionPerformed

    private void jEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEnterActionPerformed
        String Price01 = (jPrice1.getText());
        double Price1 = Double.parseDouble(Price01);
        String Price02 = (jPrice2.getText());
        double Price2 = Double.parseDouble(Price02);
        String Price03 = (jPrice3.getText());
        double Price3 = Double.parseDouble(Price03);

        double TotalPrice = 0;
        int Discount = 0;
        double AfterDiscount = 0;
        double TotalPriceDiscounted = 0;
        
        //1
        String Category1 = (String) jComboCategory1.getSelectedItem();
        String Product1 = (String) jComboProduct1.getSelectedItem();
        String Size1 = (String) jComboSize1.getSelectedItem();
        String Quantity1 = (String) jComboQuantity1.getSelectedItem();
        String PaymentMode1 = (String) jComboMoP1.getSelectedItem();
        //2
        String Category2 = (String) jComboCategory2.getSelectedItem();
        String Product2 = (String) jComboProduct2.getSelectedItem();
        String Size2 = (String) jComboSize2.getSelectedItem();
        String Quantity2 = (String) jComboQuantity2.getSelectedItem();
        String PaymentMode2 = (String) jComboMoP2.getSelectedItem();
        //3
        String Category3 = (String) jComboCategory3.getSelectedItem();
        String Product3 = (String) jComboProduct3.getSelectedItem();
        String Size3 = (String) jComboSize3.getSelectedItem();
        String Quantity3 = (String) jComboQuantity3.getSelectedItem();
        String PaymentMode3 = (String) jComboMoP3.getSelectedItem();
        
        // Computation
        TotalPrice = Price1 + Price2 + Price3;
        
        // Discount
        if (TotalPrice <= 999) {
            Discount = 0;
            AfterDiscount = 1;
        }
	else if (TotalPrice <= 2499) {
            Discount = 10;
            AfterDiscount = 0.90;
        }
        else if (TotalPrice <= 4999) {
            Discount = 20;
            AfterDiscount = 0.80;
        }
        else if (TotalPrice >= 5000) {
            Discount = 30;
            AfterDiscount = 0.70;
        }
        
        //Computation
        TotalPriceDiscounted = TotalPrice * AfterDiscount;
        
        jTextArea.setText("ABC Clothing and Accessory Store");
        jTextArea.append("\n____________________________________________________________________________________");
          
        //1
        jTextArea.append("\n\nOrder #1");
        jTextArea.append("\nCategory:         " + Category1);
        jTextArea.append("\nProduct Name:     " + Product1);
        jTextArea.append("\nSize:             " + Size1);
        jTextArea.append("\nQuantity:         " + Quantity1);
        jTextArea.append("\nPrice:            ₱" + String.format("%.2f", Price1));
        jTextArea.append("\nMode of Payment:  " + PaymentMode1);
        //2
        jTextArea.append("\n\nOrder #2");
        jTextArea.append("\nCategory:         " + Category2);
        jTextArea.append("\nProduct Name:     " + Product2);
        jTextArea.append("\nSize:             " + Size2);
        jTextArea.append("\nQuantity:         " + Quantity2);
        jTextArea.append("\nPrice:            ₱" + String.format("%.2f", Price2));
        jTextArea.append("\nMode of Payment:  " + PaymentMode2);
        //3
        jTextArea.append("\n\nOrder #3");
        jTextArea.append("\nCategory:         " + Category3);
        jTextArea.append("\nProduct Name:     " + Product3);
        jTextArea.append("\nSize:             " + Size3);
        jTextArea.append("\nQuantity:         " + Quantity3);
        jTextArea.append("\nPrice:            ₱" + String.format("%.2f", Price3));
        jTextArea.append("\nMode of Payment:  " + PaymentMode3);
        jTextArea.append("\n____________________________________________________________________________________");
        jTextArea.append("\n\nTotal:            ₱" + String.format("%.2f", TotalPrice));
        jTextArea.append("\nDiscount:         " + Discount + "%");
        jTextArea.append("\n____________________________________________________________________________________");
        jTextArea.append("\nTOTAL (after Discount): ₱" + String.format("%.2f", TotalPriceDiscounted));
  
    }//GEN-LAST:event_jEnterActionPerformed

    private void jComboCategory1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategory1ActionPerformed
        // Category to Product (1)
        try
        {
            if (jComboCategory1.getSelectedItem().equals("   --- Select Category ---"))
            {
            
                jComboProduct1.removeAllItems();
                jComboProduct1.addItem("    --- Select Product ---");
            
            }
            else if (jComboCategory1.getSelectedItem().equals("Clothing"))
            {
            
                jComboProduct1.removeAllItems();
                jComboProduct1.addItem("    --- Select Product ---");
                jComboProduct1.addItem("Blue Shirt");
                jComboProduct1.addItem("Red Shirt");
                jComboProduct1.addItem("Yellow Shirt");
                jComboProduct1.addItem("Blue Shorts");
                jComboProduct1.addItem("Red Shorts");
                jComboProduct1.addItem("Yellow Shorts");
                jComboProduct1.addItem("Blue Pants");
                jComboProduct1.addItem("Red Pants");
                jComboProduct1.addItem("Yellow Pants");
            
            }
            else if (jComboCategory1.getSelectedItem().equals("Accessory"))
            {
            
                jComboProduct1.removeAllItems();
                jComboProduct1.addItem("    --- Select Product ---");
                jComboProduct1.addItem("Gold Bracelet");
                jComboProduct1.addItem("Rose Gold Bracelet");
                jComboProduct1.addItem("Silver Bracelet");
                jComboProduct1.addItem("Gold Necklace");
                jComboProduct1.addItem("Rose Gold Necklace");
                jComboProduct1.addItem("Silver Necklace");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboCategory1ActionPerformed

    private void jComboProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboProduct1ActionPerformed
        // Product to Size and Quantity (1)
        try
        {
            if (jComboProduct1.getSelectedItem().equals("    --- Select Product ---"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
            
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Blue Shirt"))
            {
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (TS)");
                jComboSize1.addItem("Medium (TS)");
                jComboSize1.addItem("Large (TS)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
                
            }
            else if (jComboProduct1.getSelectedItem().equals("Red Shirt"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (TS)");
                jComboSize1.addItem("Medium (TS)");
                jComboSize1.addItem("Large (TS)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Yellow Shirt"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (TS)");
                jComboSize1.addItem("Medium (TS)");
                jComboSize1.addItem("Large (TS)");
            
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            }
            else if (jComboProduct1.getSelectedItem().equals("Blue Shorts"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (S)");
                jComboSize1.addItem("Medium (S)");
                jComboSize1.addItem("Large (S)");
             
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Red Shorts"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (S)");
                jComboSize1.addItem("Medium (S)");
                jComboSize1.addItem("Large (S)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Yellow Shorts"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (S)");
                jComboSize1.addItem("Medium (S)");
                jComboSize1.addItem("Large (S)");
             
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Blue Pants"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (P)");
                jComboSize1.addItem("Medium (P)");
                jComboSize1.addItem("Large (P)");
            
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Red Pants"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (P)");
                jComboSize1.addItem("Medium (P)");
                jComboSize1.addItem("Large (P)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Yellow Pants"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Small (P)");
                jComboSize1.addItem("Medium (P)");
                jComboSize1.addItem("Large (P)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            
            if (jComboProduct1.getSelectedItem().equals("Gold Bracelet"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (B)");
                jComboSize1.addItem("Thick (B)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Rose Gold Bracelet"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (B)");
                jComboSize1.addItem("Thick (B)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Silver Bracelet"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (B)");
                jComboSize1.addItem("Thick (B)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Gold Necklace"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (N)");
                jComboSize1.addItem("Thick (N)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Rose Gold Necklace"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (N)");
                jComboSize1.addItem("Thick (N)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
            else if (jComboProduct1.getSelectedItem().equals("Silver Necklace"))
            {
            
                jComboSize1.removeAllItems();
                jComboSize1.addItem("--");
                jComboSize1.addItem("Thin (N)");
                jComboSize1.addItem("Thick (N)");
                
                jComboQuantity1.removeAllItems();
                jComboQuantity1.addItem("--");
                jComboQuantity1.addItem("1");
                jComboQuantity1.addItem("2");
                jComboQuantity1.addItem("3");
                
                jComboMoP1.removeAllItems();
                jComboMoP1.addItem("--");
                jComboMoP1.addItem("Cash");
                jComboMoP1.addItem("Credit Card");
                jComboMoP1.addItem("Debit Card");
                jComboMoP1.addItem("E-Wallet");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboProduct1ActionPerformed

    private void jComboSize1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSize1ActionPerformed
        
    }//GEN-LAST:event_jComboSize1ActionPerformed

    private void jComboQuantity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboQuantity1ActionPerformed
        // First Size, Quantity, Price
        try
        {
            if (jComboSize1.getSelectedItem().equals("Small (TS)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Medium (TS)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Large (TS)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            
            if (jComboSize1.getSelectedItem().equals("Small (S)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Medium (S)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Large (S)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 450;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 900;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1350;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            
            if (jComboSize1.getSelectedItem().equals("Small (P)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 500;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 1000;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1500;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Medium (P)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 550;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 1050;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1650;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Large (P)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 600;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 1200;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1800;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            if (jComboSize1.getSelectedItem().equals("--"))
            {
                if (jComboQuantity1.getSelectedItem().equals("--"))
                {
                    int Price = 0;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
        try
        {
            if (jComboSize1.getSelectedItem().equals("Thin (B)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 150;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 300;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 450;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Thick (B)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 200;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 400;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 600;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            
            if (jComboSize1.getSelectedItem().equals("Thin (N)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
            else if (jComboSize1.getSelectedItem().equals("Thick (N)"))
            {
                if (jComboQuantity1.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
                else if (jComboQuantity1.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price1 = String.valueOf(Price);
                
                    jPrice1.setText(Price1);
                }
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboQuantity1ActionPerformed

    private void jComboCategory2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategory2ActionPerformed
        // Category to Product (2)
        try
        {
            if (jComboCategory2.getSelectedItem().equals("   --- Select Category ---"))
            {
            
                jComboProduct2.removeAllItems();
                jComboProduct2.addItem("    --- Select Product ---");
            
            }
            else if (jComboCategory2.getSelectedItem().equals("Clothing"))
            {
            
                jComboProduct2.removeAllItems();
                jComboProduct2.addItem("    --- Select Product ---");
                jComboProduct2.addItem("Blue Shirt");
                jComboProduct2.addItem("Red Shirt");
                jComboProduct2.addItem("Yellow Shirt");
                jComboProduct2.addItem("Blue Shorts");
                jComboProduct2.addItem("Red Shorts");
                jComboProduct2.addItem("Yellow Shorts");
                jComboProduct2.addItem("Blue Pants");
                jComboProduct2.addItem("Red Pants");
                jComboProduct2.addItem("Yellow Pants");
            
            }
            else if (jComboCategory2.getSelectedItem().equals("Accessory"))
            {
            
                jComboProduct2.removeAllItems();
                jComboProduct2.addItem("    --- Select Product ---");
                jComboProduct2.addItem("Gold Bracelet");
                jComboProduct2.addItem("Rose Gold Bracelet");
                jComboProduct2.addItem("Silver Bracelet");
                jComboProduct2.addItem("Gold Necklace");
                jComboProduct2.addItem("Rose Gold Necklace");
                jComboProduct2.addItem("Silver Necklace");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
    }//GEN-LAST:event_jComboCategory2ActionPerformed

    private void jComboCategory3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategory3ActionPerformed
        // Category to Product (3)
        try
        {
            if (jComboCategory3.getSelectedItem().equals("   --- Select Category ---"))
            {
            
                jComboProduct3.removeAllItems();
                jComboProduct3.addItem("    --- Select Product ---");
            
            }
            else if (jComboCategory3.getSelectedItem().equals("Clothing"))
            {
            
                jComboProduct3.removeAllItems();
                jComboProduct3.addItem("    --- Select Product ---");
                jComboProduct3.addItem("Blue Shirt");
                jComboProduct3.addItem("Red Shirt");
                jComboProduct3.addItem("Yellow Shirt");
                jComboProduct3.addItem("Blue Shorts");
                jComboProduct3.addItem("Red Shorts");
                jComboProduct3.addItem("Yellow Shorts");
                jComboProduct3.addItem("Blue Pants");
                jComboProduct3.addItem("Red Pants");
                jComboProduct3.addItem("Yellow Pants");
            
            }
            else if (jComboCategory3.getSelectedItem().equals("Accessory"))
            {
            
                jComboProduct3.removeAllItems();
                jComboProduct3.addItem("    --- Select Product ---");
                jComboProduct3.addItem("Gold Bracelet");
                jComboProduct3.addItem("Rose Bracelet");
                jComboProduct3.addItem("Silver Bracelet");
                jComboProduct3.addItem("Gold Necklace");
                jComboProduct3.addItem("Rose Gold Necklace");
                jComboProduct3.addItem("Silver Necklace");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
    }//GEN-LAST:event_jComboCategory3ActionPerformed

    private void jPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrintActionPerformed
        System.out.print(jTextArea);
        
    }//GEN-LAST:event_jPrintActionPerformed

    private void jComboQuantity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboQuantity2ActionPerformed
        // Second Size, Quantity, Price
        try
        {
            if (jComboSize2.getSelectedItem().equals("Small (TS)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Medium (TS)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Large (TS)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price2 = String.valueOf(Price);
                
                    jPrice1.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            
            if (jComboSize2.getSelectedItem().equals("Small (S)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Medium (S)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Large (S)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 450;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 900;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1350;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            
            if (jComboSize2.getSelectedItem().equals("Small (P)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 500;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 1000;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1500;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Medium (P)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 550;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 1050;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1650;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Large (P)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 600;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 1200;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1800;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            if (jComboSize2.getSelectedItem().equals("--"))
            {
                if (jComboQuantity2.getSelectedItem().equals("--"))
                {
                    int Price = 0;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
        try
        {
            if (jComboSize2.getSelectedItem().equals("Thin (B)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 150;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 300;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 450;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Thick (B)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 200;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 400;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 600;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            
            if (jComboSize2.getSelectedItem().equals("Thin (N)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
            else if (jComboSize2.getSelectedItem().equals("Thick (N)"))
            {
                if (jComboQuantity2.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
                else if (jComboQuantity2.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price2 = String.valueOf(Price);
                
                    jPrice2.setText(Price2);
                }
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboQuantity2ActionPerformed

    private void jComboQuantity3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboQuantity3ActionPerformed
        // Third Size, Quantity, Price
        try
        {
            if (jComboSize3.getSelectedItem().equals("Small (TS)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Medium (TS)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Large (TS)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            
            if (jComboSize3.getSelectedItem().equals("Small (S)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Medium (S)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 400;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 800;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1200;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Large (S)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 450;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 900;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1350;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            
            if (jComboSize3.getSelectedItem().equals("Small (P)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 500;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 1000;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1500;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Medium (P)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 550;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 1050;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1650;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Large (P)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 600;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 1200;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1800;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            if (jComboSize3.getSelectedItem().equals("--"))
            {
                if (jComboQuantity3.getSelectedItem().equals("--"))
                {
                    int Price = 0;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
        try
        {
            if (jComboSize3.getSelectedItem().equals("Thin (B)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 150;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 300;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 450;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Thick (B)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 200;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 400;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 600;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            
            if (jComboSize3.getSelectedItem().equals("Thin (N)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 300;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 600;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 900;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
            else if (jComboSize3.getSelectedItem().equals("Thick (N)"))
            {
                if (jComboQuantity3.getSelectedItem().equals("1"))
                {
                    int Price = 350;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("2"))
                {
                    int Price = 700;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
                else if (jComboQuantity3.getSelectedItem().equals("3"))
                {
                    int Price = 1050;
                    String Price3 = String.valueOf(Price);
                
                    jPrice3.setText(Price3);
                }
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboQuantity3ActionPerformed

    private void jComboProduct2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboProduct2ActionPerformed
        // Product to Size and Quantity (2)
        try
        {
            if (jComboProduct2.getSelectedItem().equals("    --- Select Product ---"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
            
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Blue Shirt"))
            {
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (TS)");
                jComboSize2.addItem("Medium (TS)");
                jComboSize2.addItem("Large (TS)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
                
            }
            else if (jComboProduct2.getSelectedItem().equals("Red Shirt"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (TS)");
                jComboSize2.addItem("Medium (TS)");
                jComboSize2.addItem("Large (TS)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Yellow Shirt"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (TS)");
                jComboSize2.addItem("Medium (TS)");
                jComboSize2.addItem("Large (TS)");
            
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            }
            else if (jComboProduct2.getSelectedItem().equals("Blue Shorts"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (S)");
                jComboSize2.addItem("Medium (S)");
                jComboSize2.addItem("Large (S)");
             
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Red Shorts"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (S)");
                jComboSize2.addItem("Medium (S)");
                jComboSize2.addItem("Large (S)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Yellow Shorts"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (S)");
                jComboSize2.addItem("Medium (S)");
                jComboSize2.addItem("Large (S)");
             
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Blue Pants"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (P)");
                jComboSize2.addItem("Medium (P)");
                jComboSize2.addItem("Large (P)");
            
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Red Pants"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (P)");
                jComboSize2.addItem("Medium (P)");
                jComboSize2.addItem("Large (P)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Yellow Pants"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Small (P)");
                jComboSize2.addItem("Medium (P)");
                jComboSize2.addItem("Large (P)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Gold Bracelet"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (B)");
                jComboSize2.addItem("Thick (B)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Rose Gold Bracelet"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (B)");
                jComboSize2.addItem("Thick (B)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Silver Bracelet"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (B)");
                jComboSize2.addItem("Thick (B)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Gold Necklace"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (N)");
                jComboSize2.addItem("Thick (N)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Rose Gold Necklace"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (N)");
                jComboSize2.addItem("Thick (N)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Silver Necklace"))
            {
            
                jComboSize2.removeAllItems();
                jComboSize2.addItem("--");
                jComboSize2.addItem("Thin (N)");
                jComboSize2.addItem("Thick (N)");
                
                jComboQuantity2.removeAllItems();
                jComboQuantity2.addItem("--");
                jComboQuantity2.addItem("1");
                jComboQuantity2.addItem("2");
                jComboQuantity2.addItem("3");
                
                jComboMoP2.removeAllItems();
                jComboMoP2.addItem("--");
                jComboMoP2.addItem("Cash");
                jComboMoP2.addItem("Credit Card");
                jComboMoP2.addItem("Debit Card");
                jComboMoP2.addItem("E-Wallet");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboProduct2ActionPerformed

    private void jComboProduct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboProduct3ActionPerformed
        // Product to Size and Quantity (3)
        try
        {
            if (jComboProduct3.getSelectedItem().equals("    --- Select Product ---"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
            
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Blue Shirt"))
            {
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (TS)");
                jComboSize3.addItem("Medium (TS)");
                jComboSize3.addItem("Large (TS)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
                
            }
            else if (jComboProduct3.getSelectedItem().equals("Red Shirt"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (TS)");
                jComboSize3.addItem("Medium (TS)");
                jComboSize3.addItem("Large (TS)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Yellow Shirt"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (TS)");
                jComboSize3.addItem("Medium (TS)");
                jComboSize3.addItem("Large (TS)");
            
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            }
            else if (jComboProduct3.getSelectedItem().equals("Blue Shorts"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (S)");
                jComboSize3.addItem("Medium (S)");
                jComboSize3.addItem("Large (S)");
             
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Red Shorts"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (S)");
                jComboSize3.addItem("Medium (S)");
                jComboSize3.addItem("Large (S)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Yellow Shorts"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (S)");
                jComboSize3.addItem("Medium (S)");
                jComboSize3.addItem("Large (S)");
             
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Blue Pants"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (P)");
                jComboSize3.addItem("Medium (P)");
                jComboSize3.addItem("Large (P)");
            
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Red Pants"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (P)");
                jComboSize3.addItem("Medium (P)");
                jComboSize3.addItem("Large (P)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Yellow Pants"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Small (P)");
                jComboSize3.addItem("Medium (P)");
                jComboSize3.addItem("Large (P)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Gold Bracelet"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (B)");
                jComboSize3.addItem("Thick (B)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Rose Gold Bracelet"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (B)");
                jComboSize3.addItem("Thick (B)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Silver Bracelet"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (B)");
                jComboSize3.addItem("Thick (B)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Gold Necklace"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (N)");
                jComboSize3.addItem("Thick (N)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct2.getSelectedItem().equals("Rose Gold Necklace"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (N)");
                jComboSize3.addItem("Thick (N)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
            else if (jComboProduct3.getSelectedItem().equals("Silver Necklace"))
            {
            
                jComboSize3.removeAllItems();
                jComboSize3.addItem("--");
                jComboSize3.addItem("Thin (N)");
                jComboSize3.addItem("Thick (N)");
                
                jComboQuantity3.removeAllItems();
                jComboQuantity3.addItem("--");
                jComboQuantity3.addItem("1");
                jComboQuantity3.addItem("2");
                jComboQuantity3.addItem("3");
                
                jComboMoP3.removeAllItems();
                jComboMoP3.addItem("--");
                jComboMoP3.addItem("Cash");
                jComboMoP3.addItem("Credit Card");
                jComboMoP3.addItem("Debit Card");
                jComboMoP3.addItem("E-Wallet");
            
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
    }//GEN-LAST:event_jComboProduct3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesTerminal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboCategory1;
    private javax.swing.JComboBox<String> jComboCategory2;
    private javax.swing.JComboBox<String> jComboCategory3;
    private javax.swing.JComboBox<String> jComboMoP1;
    private javax.swing.JComboBox<String> jComboMoP2;
    private javax.swing.JComboBox<String> jComboMoP3;
    private javax.swing.JComboBox<String> jComboProduct1;
    private javax.swing.JComboBox<String> jComboProduct2;
    private javax.swing.JComboBox<String> jComboProduct3;
    private javax.swing.JComboBox<String> jComboQuantity1;
    private javax.swing.JComboBox<String> jComboQuantity2;
    private javax.swing.JComboBox<String> jComboQuantity3;
    private javax.swing.JComboBox<String> jComboSize1;
    private javax.swing.JComboBox<String> jComboSize2;
    private javax.swing.JComboBox<String> jComboSize3;
    private javax.swing.JButton jEnter;
    private javax.swing.JButton jExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jNext;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jPrice1;
    private javax.swing.JTextField jPrice2;
    private javax.swing.JTextField jPrice3;
    private javax.swing.JButton jPrint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}